---
- name: Include system-specific vars
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Set Docker package variable
  ansible.builtin.set_fact:
    docker_package: "{{ __docker_package }}"
  when: not docker_package | bool

- name: Set Docker pip package variable
  ansible.builtin.set_fact:
    docker_pip_package: "{{ __docker_pip_package }}"
  when: not docker_pip_package | bool

- ansible.builtin.include_tasks: "setup-{{ ansible_os_family }}.yml"
  when: docker_install | bool

- ansible.builtin.import_tasks: "install-pip.yml"
  when: docker_install_compose | bool or docker_install_python_library | bool

- ansible.builtin.import_tasks: "docker-python-library.yml"
  when: docker_install_python_library | bool

- ansible.builtin.import_tasks: "docker-compose.yml"
  when: docker_install_compose | bool

- ansible.builtin.import_tasks: "docker-prune.yml"
  when: docker_system_prune | bool

- ansible.builtin.import_tasks: "docker-extras.yml"
  when: docker_enable_metrics or docker_log_driver != "json-file"

- ansible.builtin.import_tasks: "docker-options.yml"
  when: docker_daemon_options | length > 0

- ansible.builtin.include_tasks: "docker-users.yml"
  when: docker_users | length > 0

- name: Restart Docker if needed
  ansible.builtin.meta: flush_handlers

- name: Ensure Docker service state
  ansible.builtin.service:
    name: "{{ item }}"
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  with_items: "{{ docker_service }}"
